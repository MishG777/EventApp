{"ast":null,"code":"var _jsxFileName = \"D:\\\\UDEMY_REACT_JS_COURSE\\\\Section_20_React_router_BackEnd-FrontEnd\\\\frontend\\\\src\\\\pages\\\\EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useRouteLoaderData, json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  const {\n    event\n  } = data;\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport const loader = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const response = await fetch(`http://localhost:8080/events/${params.eventId}`);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch event ID!\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","useRouteLoaderData","json","EventItem","EventDetailPage","data","event","loader","request","params","response","fetch","eventId","ok","message","status"],"sources":["D:/UDEMY_REACT_JS_COURSE/Section_20_React_router_BackEnd-FrontEnd/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useRouteLoaderData, json } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nconst EventDetailPage = () => {\r\n  const data = useRouteLoaderData(\"event-detail\");\r\n\r\n  const { event } = data;\r\n\r\n  return <EventItem event={event} />;\r\n};\r\n\r\nexport default EventDetailPage;\r\n\r\nexport const loader = async ({ request, params }) => {\r\n  const response = await fetch(\r\n    `http://localhost:8080/events/${params.eventId}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw json({ message: \"Could not fetch event ID!\" }, { status: 500 });\r\n  } else {\r\n    return response;\r\n  }\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,EAAEC,IAAI,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC5B,MAAMC,IAAI,GAAGJ,kBAAkB,CAAC,cAAc,CAAC;EAE/C,MAAM;IAAEK;EAAM,CAAC,GAAGD,IAAI;EAEtB,oBAAO,QAAC,SAAS;IAAC,KAAK,EAAEC;EAAM;IAAA;IAAA;IAAA;EAAA,QAAG;AACpC,CAAC;AAAC,GANIF,eAAe;EAAA,QACNH,kBAAkB;AAAA;AAAA,KAD3BG,eAAe;AAQrB,eAAeA,eAAe;AAE9B,OAAO,MAAMG,MAAM,GAAG,cAA+B;EAAA,IAAxB;IAAEC,OAAO;IAAEC;EAAO,CAAC;EAC9C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,gCAA+BF,MAAM,CAACG,OAAQ,EAAC,CACjD;EAED,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAMX,IAAI,CAAC;MAAEY,OAAO,EAAE;IAA4B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACvE,CAAC,MAAM;IACL,OAAOL,QAAQ;EACjB;AACF,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}