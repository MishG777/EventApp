{"ast":null,"code":"var _jsxFileName = \"D:\\\\UDEMY_REACT_JS_COURSE\\\\Section_20_React_router_BackEnd-FrontEnd\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const {\n    events\n  } = data;\n  // console.log(data);\n\n  // if (data.isError) {\n  //   //can access isError from data because anything\n  //   //we return from loader can be accessed by useLoaderData()\n  //   return <p>{data.message}</p>;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"aaaaaaaaaaaaaaaaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport const loader = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch!\" };\n    // throw new Error({ message: \"Could not fetch events!\" });\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events!\" }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: \"Could not fetch events!\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","EventsPage","data","events","loader","response","fetch","ok","message","status"],"sources":["D:/UDEMY_REACT_JS_COURSE/Section_20_React_router_BackEnd-FrontEnd/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData, json } from \"react-router-dom\";\r\n\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n  const { events } = data;\r\n  // console.log(data);\r\n\r\n  // if (data.isError) {\r\n  //   //can access isError from data because anything\r\n  //   //we return from loader can be accessed by useLoaderData()\r\n  //   return <p>{data.message}</p>;\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <EventsList events={events} />\r\n      <h1>aaaaaaaaaaaaaaaaaaaa</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport const loader = async () => {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    // return { isError: true, message: \"Could not fetch!\" };\r\n    // throw new Error({ message: \"Could not fetch events!\" });\r\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events!\" }), {\r\n    //   status: 500,\r\n    // });\r\n    throw json({ message: \"Could not fetch events!\" }, { status: 500 });\r\n  } else {\r\n    return response;\r\n  }\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAEtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC;AAAA;AAElD,SAASC,UAAU,GAAG;EAAA;EACpB,MAAMC,IAAI,GAAGJ,aAAa,EAAE;EAC5B,MAAM;IAAEK;EAAO,CAAC,GAAGD,IAAI;EACvB;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,wBACE,QAAC,UAAU;MAAC,MAAM,EAAEC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAC9B;MAAA,UAAI;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA,gBAC5B;AAEP;AAAC,GAjBQF,UAAU;EAAA,QACJH,aAAa;AAAA;AAAA,KADnBG,UAAU;AAmBnB,eAAeA,UAAU;AAEzB,OAAO,MAAMG,MAAM,GAAG,YAAY;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA;IACA,MAAMR,IAAI,CAAC;MAAES,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}